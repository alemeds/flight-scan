name: Flight Monitor Autom√°tico

on:
  # Ejecutar seg√∫n un schedule (cada 2 horas)
  schedule:
    - cron: '0 */2 * * *'  # A las horas 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22
  
  # Permitir ejecuci√≥n manual desde la UI de GitHub
  workflow_dispatch:
    inputs:
      routes_count:
        description: 'N√∫mero de rutas a monitorear (m√°ximo 4)'
        required: false
        default: '4'

jobs:
  monitor:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
    
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Ejecutar monitoreo
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AMADEUS_API_KEY: ${{ secrets.AMADEUS_API_KEY }}
        AMADEUS_API_SECRET: ${{ secrets.AMADEUS_API_SECRET }}
      run: |
        echo "üöÄ Iniciando monitoreo de vuelos..."
        python monitor_script.py
    
    - name: Resumen
      if: success()
      run: |
        echo "‚úÖ Monitoreo completado exitosamente"
        echo "üìä Los datos se guardaron en PostgreSQL"
        echo "üåê Revisa el dashboard en Streamlit Cloud"
    
    - name: Notificar errores
      if: failure()
      run: |
        echo "‚ùå El monitoreo fall√≥"
        echo "Revisa los logs para m√°s detalles"
